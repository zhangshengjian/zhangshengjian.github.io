<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>坚持到放弃</title>
  
  <subtitle>make one more step.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangshengjian.github.io/"/>
  <updated>2019-08-28T13:37:52.947Z</updated>
  <id>https://zhangshengjian.github.io/</id>
  
  <author>
    <name>张 胜 健 的 博 客</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL 经典四表查询</title>
    <link href="https://zhangshengjian.github.io/2019/08/28/MySQL-%E7%BB%8F%E5%85%B8%E5%9B%9B%E8%A1%A8%E6%9F%A5%E8%AF%A2/"/>
    <id>https://zhangshengjian.github.io/2019/08/28/MySQL-经典四表查询/</id>
    <published>2019-08-28T13:09:00.000Z</published>
    <updated>2019-08-28T13:37:52.947Z</updated>
    
    <content type="html"><![CDATA[<h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><h4 id="创建学生表"><a href="#创建学生表" class="headerlink" title="创建学生表"></a>创建学生表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE student</span><br><span class="line">(</span><br><span class="line">    sid VARCHAR(32),</span><br><span class="line">    sname VARCHAR(32), </span><br><span class="line">    sage INT, </span><br><span class="line">    ssex VARCHAR(8)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="创建课程表"><a href="#创建课程表" class="headerlink" title="创建课程表"></a>创建课程表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE course</span><br><span class="line">(</span><br><span class="line">    cid VARCHAR(32), </span><br><span class="line">    cname VARCHAR(32), </span><br><span class="line">    tid VARCHAR(32)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="创建学生课程分数表"><a href="#创建学生课程分数表" class="headerlink" title="创建学生课程分数表"></a>创建学生课程分数表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE sc</span><br><span class="line">( </span><br><span class="line">    sid VARCHAR(32), </span><br><span class="line">    cid VARCHAR(32), </span><br><span class="line">    score INT</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="创建教师表"><a href="#创建教师表" class="headerlink" title="创建教师表"></a>创建教师表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE teacher</span><br><span class="line">( </span><br><span class="line">    tid VARCHAR(32), </span><br><span class="line">    tname VARCHAR(16) </span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="初始化表数据"><a href="#初始化表数据" class="headerlink" title="初始化表数据"></a>初始化表数据</h3><h4 id="初始化学生表数据"><a href="#初始化学生表数据" class="headerlink" title="初始化学生表数据"></a>初始化学生表数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into student </span><br><span class="line">select &apos;1&apos;, &apos;刘一&apos;, 18, &apos;男&apos;</span><br><span class="line">union all select &apos;2&apos;, &apos;钱二&apos;, 19, &apos;女&apos; </span><br><span class="line">union all select &apos;3&apos;, &apos;张三&apos;, 17, &apos;男&apos;</span><br><span class="line">union all select &apos;4&apos;, &apos;李四&apos;, 18, &apos;女&apos; </span><br><span class="line">union all select &apos;5&apos;, &apos;王五&apos;, 17, &apos;男&apos;</span><br><span class="line">union all select &apos;6&apos;, &apos;赵六&apos;, 19, &apos;女&apos;;</span><br></pre></td></tr></table></figure><h4 id="初始化教师表数据"><a href="#初始化教师表数据" class="headerlink" title="初始化教师表数据"></a>初始化教师表数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">insert into teacher</span><br><span class="line">select 1, &apos;叶平&apos;</span><br><span class="line">union all select 2, &apos;贺高&apos;</span><br><span class="line">union all select 3, &apos;杨艳&apos;</span><br><span class="line">union all select 4, &apos;周磊&apos;;</span><br></pre></td></tr></table></figure><h4 id="初始化课程表数据"><a href="#初始化课程表数据" class="headerlink" title="初始化课程表数据"></a>初始化课程表数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">insert into course</span><br><span class="line">select &apos;1&apos;, &apos;语文&apos;, &apos;1&apos;</span><br><span class="line">union all select &apos;2&apos;, &apos;数学&apos;, &apos;2&apos;</span><br><span class="line">union all select &apos;3&apos;, &apos;英语&apos;, &apos;3&apos;</span><br><span class="line">union all select &apos;4&apos;, &apos;物理&apos;, &apos;4&apos;;</span><br></pre></td></tr></table></figure><h4 id="初始化学生课程成绩表数据"><a href="#初始化学生课程成绩表数据" class="headerlink" title="初始化学生课程成绩表数据"></a>初始化学生课程成绩表数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">insert into sc </span><br><span class="line">select &apos;1&apos;, &apos;1&apos;, 56 </span><br><span class="line">union all select &apos;1&apos;, &apos;2&apos;, 78</span><br><span class="line">union all select &apos;1&apos;, &apos;3&apos;, 67</span><br><span class="line">union all select &apos;1&apos;, &apos;4&apos;, 58</span><br><span class="line">union all select &apos;2&apos;, &apos;1&apos;, 79</span><br><span class="line">union all select &apos;2&apos;, &apos;2&apos;, 81</span><br><span class="line">union all select &apos;2&apos;, &apos;3&apos;, 92</span><br><span class="line">union all select &apos;2&apos;, &apos;4&apos;, 68</span><br><span class="line">union all select &apos;3&apos;, &apos;1&apos;, 91</span><br><span class="line">union all select &apos;3&apos;, &apos;2&apos;, 47</span><br><span class="line">union all select &apos;3&apos;, &apos;3&apos;, 88</span><br><span class="line">union all select &apos;3&apos;, &apos;4&apos;, 56</span><br><span class="line">union all select &apos;4&apos;, &apos;2&apos;, 88</span><br><span class="line">union all select &apos;4&apos;, &apos;3&apos;, 90</span><br><span class="line">union all select &apos;4&apos;, &apos;4&apos;, 93</span><br><span class="line">union all select &apos;5&apos;, &apos;1&apos;, 46</span><br><span class="line">union all select &apos;5&apos;, &apos;3&apos;, 78</span><br><span class="line">union all select &apos;5&apos;, &apos;4&apos;, 53</span><br><span class="line">union all select &apos;6&apos;, &apos;1&apos;, 35</span><br><span class="line">union all select &apos;6&apos;, &apos;2&apos;, 68</span><br><span class="line">union all select &apos;6&apos;, &apos;4&apos;, 71;</span><br></pre></td></tr></table></figure><h3 id="SQL-查询问题"><a href="#SQL-查询问题" class="headerlink" title="SQL 查询问题"></a>SQL 查询问题</h3><h4 id="查询-“1”-课程比-“2”-课程成绩高的所有学生的学号"><a href="#查询-“1”-课程比-“2”-课程成绩高的所有学生的学号" class="headerlink" title="查询 “1” 课程比 “2” 课程成绩高的所有学生的学号"></a>查询 “1” 课程比 “2” 课程成绩高的所有学生的学号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select a.sid from (select sid,score from sc where cid = &apos;1&apos;) a, (select sid,score from sc where cid = &apos;2&apos;) b where a.score &gt; b.score and a.sid = b.sid;</span><br></pre></td></tr></table></figure><h4 id="查询平均成绩大于-60-分的同学的学号和平均成绩"><a href="#查询平均成绩大于-60-分的同学的学号和平均成绩" class="headerlink" title="查询平均成绩大于 60 分的同学的学号和平均成绩"></a>查询平均成绩大于 60 分的同学的学号和平均成绩</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sid, avg(score) from sc group by sid having avg(score) &gt;  60;</span><br></pre></td></tr></table></figure><h4 id="查询所有同学的学号、姓名、选课数、总成绩"><a href="#查询所有同学的学号、姓名、选课数、总成绩" class="headerlink" title="查询所有同学的学号、姓名、选课数、总成绩"></a>查询所有同学的学号、姓名、选课数、总成绩</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select s.sid,s.sname,count(sc.cid),sum(sc.score) from student s,sc sc where s.sid = sc.sid group by sid;</span><br><span class="line"></span><br><span class="line">select s.sid,s.sname,count(sc.cid),sum(sc.score) from student s left outer join sc on s.sid=sc.sid group by s.sid,sname;</span><br></pre></td></tr></table></figure><h4 id="查询姓-“李”-的老师的个数"><a href="#查询姓-“李”-的老师的个数" class="headerlink" title="查询姓 “李” 的老师的个数"></a>查询姓 “李” 的老师的个数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select count(tid) from teacher where tname like &apos;李%&apos;;</span><br><span class="line"></span><br><span class="line">select count(distinct(tname)) from teacher where tname like &apos;李%&apos;;</span><br></pre></td></tr></table></figure><h4 id="查询没学过-“叶平”-老师课的同学的学号、姓名"><a href="#查询没学过-“叶平”-老师课的同学的学号、姓名" class="headerlink" title="查询没学过 “叶平” 老师课的同学的学号、姓名"></a>查询没学过 “叶平” 老师课的同学的学号、姓名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select s.sid, s.sname from student s where s.sid not in (select distinct(sc.sid) from sc, course c, teacher t where sc.cid = c.cid and t.tid = c.tid and t.tname = &quot;叶平&quot;);</span><br></pre></td></tr></table></figure><h4 id="查询学过-“1”-并且也学过编号-“2”-课程的同学的学号、姓名"><a href="#查询学过-“1”-并且也学过编号-“2”-课程的同学的学号、姓名" class="headerlink" title="查询学过 “1” 并且也学过编号 “2” 课程的同学的学号、姓名"></a>查询学过 “1” 并且也学过编号 “2” 课程的同学的学号、姓名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select sid, sname from student where sid in (select sid from sc where cid = &apos;2&apos; and sid in (select sid from sc where cid = &apos;1&apos;));</span><br><span class="line"></span><br><span class="line">select s.sid, s.sname from student s, sc where s.sid = sc.sid and sc.cid = &apos;1&apos; and exists (select * from sc as sc_2 where sc_2.sid = sc.sid and sc_2.cid = &apos;2&apos;);</span><br></pre></td></tr></table></figure><h4 id="查询学过-“叶平”-老师所教的所有课的同学的学号、姓名"><a href="#查询学过-“叶平”-老师所教的所有课的同学的学号、姓名" class="headerlink" title="查询学过 “叶平” 老师所教的所有课的同学的学号、姓名"></a>查询学过 “叶平” 老师所教的所有课的同学的学号、姓名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select sid, sname from student</span><br><span class="line">where sid in (select sid from sc, course, teacher where sc.cid = course.cid and teacher.tid = course.tid and teacher.tname = &apos;叶平&apos;</span><br><span class="line">group by sid having count(sc.cid) = (select count(course.cid) from course, teacher where course.tid = teacher.tid and teacher.tname = &apos;叶平&apos;));</span><br></pre></td></tr></table></figure><h4 id="查询所有课程成绩小于-60-分的同学的学号、姓名"><a href="#查询所有课程成绩小于-60-分的同学的学号、姓名" class="headerlink" title="查询所有课程成绩小于 60 分的同学的学号、姓名"></a>查询所有课程成绩小于 60 分的同学的学号、姓名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct(s.sid), s.sname from sc, student s where sc.sid = s.sid and sc.score &lt; 60;</span><br></pre></td></tr></table></figure><h4 id="查询没有学全所有课的同学的学号、姓名"><a href="#查询没有学全所有课的同学的学号、姓名" class="headerlink" title="查询没有学全所有课的同学的学号、姓名"></a>查询没有学全所有课的同学的学号、姓名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select s.sid, s.sname from student s,sc where s.sid = sc.sid group by s.sid, s.sname having count(sc.cid) &lt; (select count(cid) from course);</span><br></pre></td></tr></table></figure><h4 id="查询至少有一门课与学号为-“1”-的同学所学相同的同学的学号和姓名"><a href="#查询至少有一门课与学号为-“1”-的同学所学相同的同学的学号和姓名" class="headerlink" title="查询至少有一门课与学号为 “1” 的同学所学相同的同学的学号和姓名"></a>查询至少有一门课与学号为 “1” 的同学所学相同的同学的学号和姓名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct(s.sid), s.sname from student s, sc where s.sid = sc.sid and sc.cid in (select cid from sc where sc.sid = &apos;1&apos;);</span><br></pre></td></tr></table></figure><h4 id="查询至少学过学号为-“1”-同学所有一门课的其他同学学号和姓名"><a href="#查询至少学过学号为-“1”-同学所有一门课的其他同学学号和姓名" class="headerlink" title="查询至少学过学号为 “1” 同学所有一门课的其他同学学号和姓名"></a>查询至少学过学号为 “1” 同学所有一门课的其他同学学号和姓名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct s.sid, s.sname from student s, sc where s.sid = sc.sid and s.sid != &apos;1&apos; and sc.cid in (select cid from sc where sc.sid = &apos;1&apos;);</span><br></pre></td></tr></table></figure><h4 id="删除学习-“叶平”-老师课的-SC-表记录"><a href="#删除学习-“叶平”-老师课的-SC-表记录" class="headerlink" title="删除学习 “叶平” 老师课的 SC 表记录"></a>删除学习 “叶平” 老师课的 SC 表记录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from sc where cid in (select distinct(cid) from (select sc.cid from sc, course c, teacher t where sc.cid = c.cid and c.tid = t.tid and t.tname = &apos;叶平&apos;) a);</span><br></pre></td></tr></table></figure><h4 id="向-SC-表中插入一些记录，这些记录要求符合以下条件：1、没有上过编号-“2”-课程的同学学号；2、插入-“2”-号课程的平均成绩"><a href="#向-SC-表中插入一些记录，这些记录要求符合以下条件：1、没有上过编号-“2”-课程的同学学号；2、插入-“2”-号课程的平均成绩" class="headerlink" title="向 SC 表中插入一些记录，这些记录要求符合以下条件：1、没有上过编号 “2” 课程的同学学号；2、插入 “2” 号课程的平均成绩"></a>向 SC 表中插入一些记录，这些记录要求符合以下条件：1、没有上过编号 “2” 课程的同学学号；2、插入 “2” 号课程的平均成绩</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into sc (select sid, &apos;2&apos;, (select avg(score) from sc where cid = &apos;2&apos;) from student where sid not in (select sid from sc where cid = &apos;2&apos;));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;创建表&quot;&gt;&lt;a href=&quot;#创建表&quot; class=&quot;headerlink&quot; title=&quot;创建表&quot;&gt;&lt;/a&gt;创建表&lt;/h3&gt;&lt;h4 id=&quot;创建学生表&quot;&gt;&lt;a href=&quot;#创建学生表&quot; class=&quot;headerlink&quot; title=&quot;创建学生表&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="MySQL" scheme="https://zhangshengjian.github.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://zhangshengjian.github.io/tags/MySQL/"/>
    
      <category term="SQL" scheme="https://zhangshengjian.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Java setDaemon(true)</title>
    <link href="https://zhangshengjian.github.io/2019/08/22/Java-setDaemon-true/"/>
    <id>https://zhangshengjian.github.io/2019/08/22/Java-setDaemon-true/</id>
    <published>2019-08-21T23:36:00.000Z</published>
    <updated>2019-08-22T00:14:33.236Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在代码中遇到过 setDaemon(true)，但是一直没弄清楚该方法是做什么的，现在研究一波这东西到底是做什么的。</p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>守护线程，也称”服务线程”，在没有用户线程可服务时会自动离开。</p><p>优先级：守护线程的优先级比较低，用于为系统中的其它对象和线程提供服务。</p><p>设置：通过 <code>setDaemon(true)</code> 来设置线程为”守护线程”；将一个用户线程设置为守护线程的方式是在 <strong>线程对象创建</strong> 之前用线程对象的 <code>setDaemon</code> 方法。</p><h3 id="守护线程例子"><a href="#守护线程例子" class="headerlink" title="守护线程例子"></a>守护线程例子</h3><p>垃圾回收线程就是一个经典的守护线程，当程序中不再有任何运行的 Thread，程序就不会再产生垃圾，垃圾回收器也就无事可做，所以当垃圾回收线程是 JVM 上仅剩的线程时，垃圾回收线程会自动离开。它始终在低级别的状态中运行，用于实时监控和管理系统中的可回收资源。</p><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><p>守护进程（Daemon）是运行在后台的一种特殊进程。它独立于控制终端并且周期性地执行某种任务或等待处理某些发生的事件。也就是说守护线程不依赖于终端，但是依赖于系统，与系统”同生共死”。那 Java 的守护线程是什么样子的呢。当 JVM 中所有的线程都是守护线程的时候，JVM 就可以退出了；如果还有一个或以上的非守护线程则 JVM 不会退出。</p><h3 id="例子程序"><a href="#例子程序" class="headerlink" title="例子程序"></a>例子程序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">thread = new Thread(this);</span><br><span class="line"></span><br><span class="line">thread.setDaemon(true);</span><br><span class="line"></span><br><span class="line">thread.start();</span><br></pre></td></tr></table></figure><p>当 Java 虚拟机中没有非守护线程在运行的时候，Java 虚拟机会关闭。当所有常规线程运行完毕以后，守护线程不管运行到哪里，虚拟机都会退出运行。所以守护线程最好不要写一些会影响程序的业务逻辑。否则无法预料程序到底会出现什么问题。</p><h3 id="代码模拟"><a href="#代码模拟" class="headerlink" title="代码模拟"></a>代码模拟</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">public class Demo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Thread thread = new Thread(() -&gt; &#123;</span><br><span class="line">            while (true) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    TimeUnit.SECONDS.sleep(1);</span><br><span class="line">                &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(&quot;sleep 1s&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        // 默认为false,设置为false代表非守护线程,true为守护线程,守护线程在主方法结束时候结束</span><br><span class="line">//        thread.setDaemon(true);</span><br><span class="line">        thread.start();</span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(3);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;main thread is over&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sleep 1s</span><br><span class="line">sleep 1s</span><br><span class="line">main thread is over</span><br><span class="line">sleep 1s</span><br><span class="line">sleep 1s</span><br><span class="line">sleep 1s</span><br><span class="line">sleep 1s</span><br><span class="line">sleep 1s</span><br><span class="line">sleep 1s</span><br></pre></td></tr></table></figure><p>thread.setDaemon(true)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sleep 1s</span><br><span class="line">sleep 1s</span><br><span class="line">main thread is over</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在代码中遇到过 setDaemon(true)，但是一直没弄清楚该方法是做什么的，现在研究一波这东西到底是做什么的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="Java" scheme="https://zhangshengjian.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://zhangshengjian.github.io/tags/Java/"/>
    
      <category term="多线程" scheme="https://zhangshengjian.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>问题篇</title>
    <link href="https://zhangshengjian.github.io/2019/08/12/%E9%97%AE%E9%A2%98%E7%AF%87/"/>
    <id>https://zhangshengjian.github.io/2019/08/12/问题篇/</id>
    <published>2019-08-12T13:25:00.000Z</published>
    <updated>2019-08-20T23:50:43.359Z</updated>
    
    <content type="html"><![CDATA[<p>标记一波需要研究的知识。</p><ul><li>分布式项目经验（zookeeper、dubbo、springcloud 等）</li><li>SQL 能力（group by、join、left join、right join 等）</li><li>阶段性的总结</li><li>沟通能力</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;标记一波需要研究的知识。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分布式项目经验（zookeeper、dubbo、springcloud 等）&lt;/li&gt;
&lt;li&gt;SQL 能力（group by、join、left join、right join 等）&lt;/li&gt;
&lt;li&gt;阶段性的总结&lt;/l
      
    
    </summary>
    
      <category term="Other" scheme="https://zhangshengjian.github.io/categories/Other/"/>
    
    
      <category term="Other" scheme="https://zhangshengjian.github.io/tags/Other/"/>
    
  </entry>
  
  <entry>
    <title>心灵鸡汤</title>
    <link href="https://zhangshengjian.github.io/2019/08/12/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4/"/>
    <id>https://zhangshengjian.github.io/2019/08/12/心灵鸡汤/</id>
    <published>2019-08-12T13:22:00.000Z</published>
    <updated>2019-08-21T23:30:21.185Z</updated>
    
    <content type="html"><![CDATA[<h3 id="团队篇"><a href="#团队篇" class="headerlink" title="团队篇"></a>团队篇</h3><p>作为一个领导人，应该控制自己的情绪，很多时候发脾气是无能的表现，合理的情绪控制对于团队的和谐，稳定军心有大作用。 - 马云</p><h3 id="励志篇"><a href="#励志篇" class="headerlink" title="励志篇"></a>励志篇</h3><p>短暂的激情是不值钱的，只有持久的激情才是赚钱的。 - 马云</p><h3 id="实干篇"><a href="#实干篇" class="headerlink" title="实干篇"></a>实干篇</h3><p>我喜欢程序员，他们单纯、固执、容易体会到成就感；面对压力，能够挑灯夜战不眠不休；面对困难，能够迎难而上挑战自我。</p><p>对于大部分壁垒不高的专业，在大学里学的和工作中实际用到的，差距很大。而企业看重的是应届生的学习能力，真不是你读过某个专业4年。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;团队篇&quot;&gt;&lt;a href=&quot;#团队篇&quot; class=&quot;headerlink&quot; title=&quot;团队篇&quot;&gt;&lt;/a&gt;团队篇&lt;/h3&gt;&lt;p&gt;作为一个领导人，应该控制自己的情绪，很多时候发脾气是无能的表现，合理的情绪控制对于团队的和谐，稳定军心有大作用。 - 马云&lt;/p&gt;

      
    
    </summary>
    
      <category term="Other" scheme="https://zhangshengjian.github.io/categories/Other/"/>
    
    
      <category term="Other" scheme="https://zhangshengjian.github.io/tags/Other/"/>
    
  </entry>
  
  <entry>
    <title>技术 概念篇</title>
    <link href="https://zhangshengjian.github.io/2019/08/12/%E6%8A%80%E6%9C%AF-%E6%A6%82%E5%BF%B5%E7%AF%87/"/>
    <id>https://zhangshengjian.github.io/2019/08/12/技术-概念篇/</id>
    <published>2019-08-12T13:10:00.000Z</published>
    <updated>2019-08-25T23:47:26.401Z</updated>
    
    <content type="html"><![CDATA[<p>技术视野的拓展，收藏一波阅读过的好的技术文章～～～</p><p><a href="https://blog.csdn.net/weixin_43167418/article/details/98564755" target="_blank" rel="noopener">CDN</a></p><p><a href="https://blog.csdn.net/qiuzhongweiwei/article/details/80172529" target="_blank" rel="noopener">网关</a></p><p><a href="https://blog.csdn.net/baron_leizhang/article/details/99675933" target="_blank" rel="noopener">如何写邮件</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;技术视野的拓展，收藏一波阅读过的好的技术文章～～～&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_43167418/article/details/98564755&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
      
    
    </summary>
    
      <category term="Other" scheme="https://zhangshengjian.github.io/categories/Other/"/>
    
    
      <category term="Other" scheme="https://zhangshengjian.github.io/tags/Other/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch Demo</title>
    <link href="https://zhangshengjian.github.io/2019/08/04/Elasticsearch-Demo/"/>
    <id>https://zhangshengjian.github.io/2019/08/04/Elasticsearch-Demo/</id>
    <published>2019-08-04T13:32:00.000Z</published>
    <updated>2019-08-04T13:49:27.105Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Spring-Data-Elasticsearch"><a href="#Spring-Data-Elasticsearch" class="headerlink" title="Spring Data Elasticsearch"></a>Spring Data Elasticsearch</h3><blockquote><p>Spring Data Elasticsearch 是 Spring 提供的一种以 Spring Data 风格来操作数据存储的方式，它可以避免编写大量的样板代码。</p></blockquote><h4 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h4><p><strong>@Document</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 标示映射到 Elasticsearch 文档上的领域对象</span><br><span class="line">public @interface Document &#123;</span><br><span class="line">// 索引库名次，mysql 中数据库的概念</span><br><span class="line">    String indexName();</span><br><span class="line">    // 文档类型，mysql 中表的概念</span><br><span class="line">    String type() default &quot;&quot;;</span><br><span class="line">    // 默认分片数</span><br><span class="line">    short shards() default 5;</span><br><span class="line">    // 默认副本数量</span><br><span class="line">    short replicas() default 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>@Id</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 表示是文档的 id，文档可以认为是 mysql 中表行的概念</span><br><span class="line">public @interface Id &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>@Field</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public @interface Field &#123;</span><br><span class="line">// 文档中字段的类型</span><br><span class="line">FieldType type() default FieldType.Auto;</span><br><span class="line">// 是否建立倒排索引</span><br><span class="line">boolean index() default true;</span><br><span class="line">// 是否进行存储</span><br><span class="line">boolean store() default false;</span><br><span class="line">// 分词器名次</span><br><span class="line">String analyzer() default &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 为文档自动指定元数据类型</span><br><span class="line">public enum FieldType &#123;</span><br><span class="line">Text, // 会进行分词并建了索引的字符类型</span><br><span class="line">Integer,</span><br><span class="line">Long,</span><br><span class="line">Date,</span><br><span class="line">Float,</span><br><span class="line">Double,</span><br><span class="line">Boolean,</span><br><span class="line">Object,</span><br><span class="line">Auto, // 自动判断字段类型</span><br><span class="line">Nested, // 嵌套对象类型</span><br><span class="line">Ip,</span><br><span class="line">Attachment, </span><br><span class="line">Keyword // 不会进行分词建立索引的类型</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Spring-Data-Elasticsearch&quot;&gt;&lt;a href=&quot;#Spring-Data-Elasticsearch&quot; class=&quot;headerlink&quot; title=&quot;Spring Data Elasticsearch&quot;&gt;&lt;/a&gt;Spring Data
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="https://zhangshengjian.github.io/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="https://zhangshengjian.github.io/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch</title>
    <link href="https://zhangshengjian.github.io/2019/08/04/Elasticsearch/"/>
    <id>https://zhangshengjian.github.io/2019/08/04/Elasticsearch/</id>
    <published>2019-08-04T08:34:00.000Z</published>
    <updated>2019-08-04T13:33:59.400Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h3><blockquote><p>Elasticsearch 是一个分布式、可扩展、实时的搜索与数据分析引擎。 它能从项目一开始就赋予你的数据以搜索、分析和探索的能力，可用于实现全文搜索和实时数据统计。</p></blockquote><h3 id="Elasticsearch-的安装和使用"><a href="#Elasticsearch-的安装和使用" class="headerlink" title="Elasticsearch 的安装和使用"></a>Elasticsearch 的安装和使用</h3><p>1.下载 Elasticsearch6.2.2 的 zip 包，并解压到指定目录，下载地址：<a href="https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-2-2" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-2-2</a></p><p><img src="/images/pasted-41.png" alt="图一"></p><p>2.安装中文分词插件，将分词插件解压到 elasticsearch-6.2.2\plugins 下，分词插件下载地址：<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.2.2/elasticsearch-analysis-ik-6.2.2.zip" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.2.2/elasticsearch-analysis-ik-6.2.2.zip</a></p><p><img src="/images/pasted-42.png" alt="图二"></p><p>3.启动 Elasticsearch，在 elasticsearch-6-2-2 目录下执行命令 <code>bin/elasticsearch</code></p><p><img src="/images/pasted-43.png" alt="图三"></p><p>4.下载 Kibana，作为访问 Elasticsearch 的客户端，下载6.2.2版本的 zip 包，并解压到指定目录，下载地址：<a href="https://artifacts.elastic.co/downloads/kibana/kibana-6.2.2-darwin-x86_64.tar.gz" target="_blank" rel="noopener">https://artifacts.elastic.co/downloads/kibana/kibana-6.2.2-darwin-x86_64.tar.gz</a></p><p><img src="/images/pasted-44.png" alt="图四"></p><p>5.运行 bin 目录下的 bin/kibana，启动 Kibana 的用户界面</p><p><img src="/images/pasted-45.png" alt="图五"></p><p>6.访问 <a href="http://localhost:5601" target="_blank" rel="noopener">http://localhost:5601</a> 即可打开 Kibana 的用户界面</p><p><img src="/images/pasted-46.png" alt="图六"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Elasticsearch&quot;&gt;&lt;a href=&quot;#Elasticsearch&quot; class=&quot;headerlink&quot; title=&quot;Elasticsearch&quot;&gt;&lt;/a&gt;Elasticsearch&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Elasticsearch
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="https://zhangshengjian.github.io/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="https://zhangshengjian.github.io/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>mall 电商系统学习</title>
    <link href="https://zhangshengjian.github.io/2019/08/01/mall-%E7%94%B5%E5%95%86%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/"/>
    <id>https://zhangshengjian.github.io/2019/08/01/mall-电商系统学习/</id>
    <published>2019-08-01T14:28:28.000Z</published>
    <updated>2019-08-01T14:35:14.492Z</updated>
    
    <content type="html"><![CDATA[<h4 id="订单模块数据库表解析（一）"><a href="#订单模块数据库表解析（一）" class="headerlink" title="订单模块数据库表解析（一）"></a><a href="https://mp.weixin.qq.com/s/OcZQpT3b9YjR8xAZHblHAw" target="_blank" rel="noopener">订单模块数据库表解析（一）</a></h4><p>oms_order 订单表<br>oms_order_item 订单商品信息表<br>oms_order_operator_history 订单操作记录表<br>oms_order_setting 订单设置表</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;订单模块数据库表解析（一）&quot;&gt;&lt;a href=&quot;#订单模块数据库表解析（一）&quot; class=&quot;headerlink&quot; title=&quot;订单模块数据库表解析（一）&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/OcZQpT3b9Yj
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Intellij IDEA</title>
    <link href="https://zhangshengjian.github.io/2019/07/23/Intellij-IDEA/"/>
    <id>https://zhangshengjian.github.io/2019/07/23/Intellij-IDEA/</id>
    <published>2019-07-23T14:43:00.000Z</published>
    <updated>2019-08-14T00:08:19.600Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Intellij-IDEA-快捷键"><a href="#Intellij-IDEA-快捷键" class="headerlink" title="Intellij IDEA 快捷键"></a>Intellij IDEA 快捷键</h3><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>ctrl + shift + enter</td><td>代码末尾加分号</td></tr></tbody></table><table><thead><tr><th>代码自动生成</th><th>描述</th></tr></thead><tbody><tr><td>psvm</td><td>main 函数</td></tr><tr><td>fori</td><td>for 循环</td></tr><tr><td>foreach</td><td>foreach 循环</td></tr></tbody></table><h3 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h3><h4 id="设置界面风格及修改外部-UI-尺寸大小"><a href="#设置界面风格及修改外部-UI-尺寸大小" class="headerlink" title="设置界面风格及修改外部 UI 尺寸大小"></a>设置界面风格及修改外部 UI 尺寸大小</h4><p><img src="/images/pasted-47.png" alt="图一"></p><h4 id="打开-IDEA-时设置不重新打开最近的项目"><a href="#打开-IDEA-时设置不重新打开最近的项目" class="headerlink" title="打开 IDEA 时设置不重新打开最近的项目"></a>打开 IDEA 时设置不重新打开最近的项目</h4><blockquote><p>IDEA 默认会打开最近的项目，有时候我们需要自己选择要打开的项目，不勾选该选项可以实现。</p></blockquote><p><img src="/images/pasted-48.png" alt="图二"></p><h4 id="设置-IDEA-的快捷键"><a href="#设置-IDEA-的快捷键" class="headerlink" title="设置 IDEA 的快捷键"></a>设置 IDEA 的快捷键</h4><p><img src="/images/pasted-49.png" alt="图三"></p><h4 id="设置代码字体大小"><a href="#设置代码字体大小" class="headerlink" title="设置代码字体大小"></a>设置代码字体大小</h4><p><img src="/images/pasted-50.png" alt="图四"></p><h4 id="设置项目文件编码格式"><a href="#设置项目文件编码格式" class="headerlink" title="设置项目文件编码格式"></a>设置项目文件编码格式</h4><p><img src="/images/pasted-51.png" alt="图五"></p><h4 id="设置代码提示的匹配模式"><a href="#设置代码提示的匹配模式" class="headerlink" title="设置代码提示的匹配模式"></a>设置代码提示的匹配模式</h4><p><img src="/images/pasted-52.png" alt="图六"></p><h4 id="设置新建类文件的类注释模版"><a href="#设置新建类文件的类注释模版" class="headerlink" title="设置新建类文件的类注释模版"></a>设置新建类文件的类注释模版</h4><p><img src="/images/pasted-53.png" alt="图七"></p><h3 id="推荐插件"><a href="#推荐插件" class="headerlink" title="推荐插件"></a>推荐插件</h3><h4 id="Free-MyBatis-plugin"><a href="#Free-MyBatis-plugin" class="headerlink" title="Free MyBatis plugin"></a>Free MyBatis plugin</h4><blockquote><p>非常好用的 MyBatis 插件，对 MyBatis 的 xml 具有强大的提示功能，同时可以关联 mapper 接口和 mapper.xml 中的 sql 实现。</p></blockquote><p><img src="/images/pasted-54.png" alt="图八"></p><p>可以从 mapper 接口和 mapper.xml 文件中相互跳转</p><p><img src="/images/pasted-55.png" alt="图九"></p><p>mapper.xml 中的各种提示</p><p><img src="/images/pasted-56.png" alt="图十"></p><h4 id="Lombok-plugin"><a href="#Lombok-plugin" class="headerlink" title="Lombok plugin"></a>Lombok plugin</h4><blockquote><p>Lombok 为 Java 语言添加了非常有趣的附加功能，你可以不用再为实体类手写 getter,setter 等方法，通过一个注解即可拥有。</p></blockquote><p><img src="/images/pasted-57.png" alt="图十一"></p><p>一个没有 getter,setter 方法的类通过添加 <code>@Getter</code> 和 <code>@Setter</code> 注解拥有了 getter,setter 方法。</p><p><img src="/images/pasted-58.png" alt="图十二"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Intellij-IDEA-快捷键&quot;&gt;&lt;a href=&quot;#Intellij-IDEA-快捷键&quot; class=&quot;headerlink&quot; title=&quot;Intellij IDEA 快捷键&quot;&gt;&lt;/a&gt;Intellij IDEA 快捷键&lt;/h3&gt;&lt;table&gt;
&lt;thea
      
    
    </summary>
    
      <category term="Tools" scheme="https://zhangshengjian.github.io/categories/Tools/"/>
    
    
      <category term="Intellij IDEA" scheme="https://zhangshengjian.github.io/tags/Intellij-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>JVM 运行参数的变量</title>
    <link href="https://zhangshengjian.github.io/2019/07/21/JVM-%E8%BF%90%E8%A1%8C%E5%8F%82%E6%95%B0%E7%9A%84%E5%8F%98%E9%87%8F/"/>
    <id>https://zhangshengjian.github.io/2019/07/21/JVM-运行参数的变量/</id>
    <published>2019-07-21T15:09:00.000Z</published>
    <updated>2019-08-01T13:45:16.695Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>参数名称</th><th>参数说明</th></tr></thead><tbody><tr><td>-server</td><td>一定要作为第一个参数，在多个 CPU 时性能佳</td></tr><tr><td>-Xms</td><td>初始堆内存大小（使用的最小内存）, CPU 性能高时此值应设的大一些</td></tr><tr><td>-Xmx</td><td>堆内存堆最大值，使用的最大堆内存</td></tr><tr><td>-XX:PermSize</td><td>设定内存的永久保存区域</td></tr><tr><td>-XX:MaxPermSize</td><td>设定最大内存的永久保存区域</td></tr><tr><td>-verbose:gc</td><td>垃圾收集时的信息打印</td></tr><tr><td>-XX:+printGC</td><td>垃圾收集时的信息打印</td></tr><tr><td>-Xloggc:../logs/gclog.log</td><td>指定 GC log 的位置，以文件输出</td></tr><tr><td>-XX:+PrintGCDetails</td><td>打印 GC 更详细的信息</td></tr><tr><td>-XX:+PrintGCTimeStamps</td><td>输出 GC 的时间戳（以基准时间的形式）</td></tr><tr><td>-XX:+PrintGCDateStamps</td><td>输出 GC 的时间戳（以日期的形式，如 2013-05-04T21:53:59.234+0800）</td></tr><tr><td>-XX:+PrintHeapAtGC</td><td>在进行 GC 的前后打印出堆的信息</td></tr><tr><td>-XX:+HeapDumpOnOutOfMemoryError</td><td>OOM 的时候，自动写 Heapdump 文件</td></tr><tr><td>-XX:HeapDumpPath</td><td>dump 文件位置</td></tr><tr><td>-Xmn</td><td>年轻代的堆内存大小，一般设置为 Xmx 的3、4分之一</td></tr></tbody></table><ul><li>-Xms 和 -Xmx 两个值是分配 JVM 的最小和最大内存，取决于硬件物理内存的大小，建议均设为物理内存的一半</li><li>-verbose:gc 在启动参数中加上 -verbose:gc 当发生 gc 时，可以打印出 gc 相关的信息；该信息不够高全面，等同于 -XX:+PrintGC。其实只要设置 -XX:+PrintGCDetails 就会自动带上 -verbose:gc和 -XX:+PrintGC</li></ul><blockquote><p>参考网址</p></blockquote><p><a href="https://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html</a><br><a href="https://mp.weixin.qq.com/s/8Y2GbVE2rKFTCq930WV-qg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/8Y2GbVE2rKFTCq930WV-qg</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名称&lt;/th&gt;
&lt;th&gt;参数说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-server&lt;/td&gt;
&lt;td&gt;一定要作为第一个参数，在多个 CPU 时性能佳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;t
      
    
    </summary>
    
      <category term="JVM" scheme="https://zhangshengjian.github.io/categories/JVM/"/>
    
    
      <category term="JVM" scheme="https://zhangshengjian.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot - Web 综合开发</title>
    <link href="https://zhangshengjian.github.io/2019/07/19/Spring-Boot-Web-%E7%BB%BC%E5%90%88%E5%BC%80%E5%8F%91/"/>
    <id>https://zhangshengjian.github.io/2019/07/19/Spring-Boot-Web-综合开发/</id>
    <published>2019-07-18T16:12:00.000Z</published>
    <updated>2019-07-19T06:32:42.301Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Web-开发"><a href="#Web-开发" class="headerlink" title="Web 开发"></a>Web 开发</h4><p>Spring Boot Web 开发非常的简单，其中包括常用的 json 输出、filters、property、log 等</p><h5 id="json-接口开发"><a href="#json-接口开发" class="headerlink" title="json 接口开发"></a>json 接口开发</h5><p>在以前使用 Spring 开发项目，需要提供 json 接口时需要做哪些配置呢</p><blockquote><p>添加 jackjson 等相关 jar 包<br>配置 Spring Controller 扫描<br>对接的方法添加 @ResponseBody</p></blockquote><p>这样会经常由于配置错误，导致406错误等等，Spring Boot 如何做呢，只需要类添加<code>@RestController</code> 即可，默认类中的方法都会以 json 的格式返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class HelloController &#123;</span><br><span class="line">    @RequestMapping(&quot;/getUser&quot;)</span><br><span class="line">    public User getUser() &#123;</span><br><span class="line">    User user=new User();</span><br><span class="line">    user.setUserName(&quot;小明&quot;);</span><br><span class="line">    user.setPassWord(&quot;xxxx&quot;);</span><br><span class="line">        return user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如果需要使用页面开发只要使用<code>@Controller</code>注解即可，下面会结合模板来说明</p><h4 id="自定义-Filter"><a href="#自定义-Filter" class="headerlink" title="自定义 Filter"></a>自定义 Filter</h4><p>我们常常在项目中会使用 filters 用于录调用日志、排除有 XSS 威胁的字符、执行权限验证等等。Spring Boot 自动添加了 OrderedCharacterEncodingFilter 和 HiddenHttpMethodFilter，并且我们可以自定义 Filter。</p><p>两个步骤：</p><blockquote><p>实现 Filter 接口，实现 Filter 方法<br>添加<code>@Configuration</code>注解，将自定义 Filter 加入过滤链</p></blockquote><h4 id="自定义-Property"><a href="#自定义-Property" class="headerlink" title="自定义 Property"></a>自定义 Property</h4><p>在 Web 开发的过程中，经常需要自定义一些配置文件，如何使用呢</p><p>配置在 application.properties 中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">com.neo.title=纯洁的微笑</span><br><span class="line">com.neo.description=分享生活和技术</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Web-开发&quot;&gt;&lt;a href=&quot;#Web-开发&quot; class=&quot;headerlink&quot; title=&quot;Web 开发&quot;&gt;&lt;/a&gt;Web 开发&lt;/h4&gt;&lt;p&gt;Spring Boot Web 开发非常的简单，其中包括常用的 json 输出、filters、proper
      
    
    </summary>
    
      <category term="Spring Boot" scheme="https://zhangshengjian.github.io/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="https://zhangshengjian.github.io/tags/Spring-Boot/"/>
    
      <category term="Web" scheme="https://zhangshengjian.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot - 入门篇</title>
    <link href="https://zhangshengjian.github.io/2019/07/18/Spring-Boot-%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>https://zhangshengjian.github.io/2019/07/18/Spring-Boot-入门篇/</id>
    <published>2019-07-18T09:11:00.000Z</published>
    <updated>2019-07-18T16:13:25.185Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Spring Boot 火了这么久，面试任何一家公司已经成为 Java 程序员的必备技能，打算利用一个月时间细致学习一下 Spring Boot，给自己的技能包丰富一下技能储备。</p></blockquote><h3 id="Maven-构建项目"><a href="#Maven-构建项目" class="headerlink" title="Maven 构建项目"></a>Maven 构建项目</h3><p>通过 IDEA 构建项目</p><p><img src="/images/pasted-34.png" alt="step 1"><br><img src="/images/pasted-35.png" alt="step 2"><br><img src="/images/pasted-36.png" alt="step 3"><br><img src="/images/pasted-37.png" alt="step 4"><br><img src="/images/pasted-38.png" alt="step 5"><br><img src="/images/pasted-39.png" alt="step 6"></p><p>最后，启动 Application main 方法，至此一个 Java 项目搭建好了！</p><h3 id="引入-WEB-模块"><a href="#引入-WEB-模块" class="headerlink" title="引入 WEB 模块"></a>引入 WEB 模块</h3><p>1、pom.xml 中添加支持 web 的模块：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>pom.xml 文件中默认有两个模块：</p><ul><li><code>spring-boot-starter</code> ：核心模块，包括自动配置支持、日志和 YAML，如果引入了 <code>spring-boot-starter-web</code> web 模块可以去掉此配置，因为 <code>spring-boot-starter-web</code> 自动依赖了 <code>spring-boot-starter</code>。</li><li><code>spring-boot-starter-test</code> ：测试模块，包括 JUnit、Hamcrest、Mockito。</li></ul><p>2、编写 Controller 内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class HelloWorldController &#123;</span><br><span class="line">    @RequestMapping(&quot;/hello&quot;)</span><br><span class="line">    public String index() &#123;</span><br><span class="line">        return &quot;Hello World&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>@RestController</code> 的意思就是 Controller 里面的方法都以 json 格式输出，不用再写什么 jackjson 配置的了！</p><p>3、启动主程序，打开浏览器访问 <a href="http://localhost:8080/hello" target="_blank" rel="noopener">http://localhost:8080/hello</a></p><h3 id="如何做单元测试"><a href="#如何做单元测试" class="headerlink" title="如何做单元测试"></a>如何做单元测试</h3><p>打开的<code>src/test/</code>下的测试入口，编写简单的 http 请求来测试；使用 mockmvc 进行，利用<code>MockMvcResultHandlers.print()</code>打印出执行结果。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@RunWith(SpringRunner.class)</span><br><span class="line">@SpringBootTest</span><br><span class="line">public class HelloTests &#123;</span><br><span class="line"></span><br><span class="line">   private MockMvc mvc;</span><br><span class="line"></span><br><span class="line">   @Before</span><br><span class="line">   public void setUp() throws Exception &#123;</span><br><span class="line">       mvc = MockMvcBuilders.standaloneSetup(new HelloWorldController()).build();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Test</span><br><span class="line">   public void getHello() throws Exception &#123;</span><br><span class="line">       mvc.perform(MockMvcRequestBuilders.get(&quot;/hello&quot;).accept(MediaType.APPLICATION_JSON))</span><br><span class="line">               .andExpect(status().isOk())</span><br><span class="line">               .andExpect(content().string(equalTo(&quot;Hello World&quot;)));</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="开发环境的调试"><a href="#开发环境的调试" class="headerlink" title="开发环境的调试"></a>开发环境的调试</h3><p>热启动在正常开发项目中已经很常见了吧，虽然平时开发 web 项目过程中，改动项目启重启总是报错；但SpringBoot 对调试支持很好，修改之后可以实时生效（经验证 IDEA 中每次修改完代码后需要手动 Build Project 才能生效），需要添加以下的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">  &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">      &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">  &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line">&lt;build&gt;</span><br><span class="line">&lt;plugins&gt;</span><br><span class="line">    &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;configuration&gt;</span><br><span class="line">            &lt;fork&gt;true&lt;/fork&gt;</span><br><span class="line">            &lt;/configuration&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure></p><p>该模块在完整的打包环境下运行的时候会被禁用。如果你使用<code>java -jar</code>启动应用或者用一个特定的 classloader 启动，它会认为这是一个“生产环境”。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>使用 Spring Boot 可以非常方便、快速搭建项目，不用关心框架之间的兼容性，适用版本等各种问题，使用任何东西，仅仅添加一个配置就可以，所以使用 Spring Boot 非常适合构建微服务。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Spring Boot 火了这么久，面试任何一家公司已经成为 Java 程序员的必备技能，打算利用一个月时间细致学习一下 Spring Boot，给自己的技能包丰富一下技能储备。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Maven-构建
      
    
    </summary>
    
      <category term="Spring Boot" scheme="https://zhangshengjian.github.io/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="https://zhangshengjian.github.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>开发工具篇</title>
    <link href="https://zhangshengjian.github.io/2019/07/18/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%AF%87/"/>
    <id>https://zhangshengjian.github.io/2019/07/18/开发工具篇/</id>
    <published>2019-07-18T01:27:00.000Z</published>
    <updated>2019-07-18T08:43:51.320Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>开发工具篇</p></blockquote><table><thead><tr><th>工具</th><th>说明</th><th>官网</th></tr></thead><tbody><tr><td>IDEA</td><td>开发 IDE</td><td><a href="https://www.jetbrains.com/idea/download" target="_blank" rel="noopener">https://www.jetbrains.com/idea/download</a></td></tr><tr><td>RedisDesktop</td><td>redis 客户端连接工具</td><td><a href="https://redisdesktop.com/download" target="_blank" rel="noopener">https://redisdesktop.com/download</a></td></tr><tr><td>Robomongo</td><td>mongo 客户端连接工具</td><td><a href="https://robomongo.org/download" target="_blank" rel="noopener">https://robomongo.org/download</a></td></tr><tr><td>SwitchHosts</td><td>本地 host 管理</td><td><a href="https://oldj.github.io/SwitchHosts/" target="_blank" rel="noopener">https://oldj.github.io/SwitchHosts/</a></td></tr><tr><td>X-shell</td><td>Linux 远程连接工具</td><td><a href="http://www.netsarang.com/download/software.html" target="_blank" rel="noopener">http://www.netsarang.com/download/software.html</a></td></tr><tr><td>SecureCRT</td><td>Linux 远程连接工具</td><td><a href="https://www.vandyke.com/products/securecrt/mac_osx.html" target="_blank" rel="noopener">https://www.vandyke.com/products/securecrt/mac_osx.html</a></td></tr><tr><td>Navicat</td><td>数据库连接工具</td><td><a href="http://www.formysql.com/xiazai.html" target="_blank" rel="noopener">http://www.formysql.com/xiazai.html</a></td></tr><tr><td>PowerDesigner</td><td>数据库设计工具</td><td><a href="http://powerdesigner.de/" target="_blank" rel="noopener">http://powerdesigner.de/</a></td></tr><tr><td>Axure</td><td>原型设计工具</td><td><a href="https://www.axure.com/" target="_blank" rel="noopener">https://www.axure.com/</a></td></tr><tr><td>MindMaster</td><td>思维导图设计工具</td><td><a href="http://www.edrawsoft.cn/mindmaster" target="_blank" rel="noopener">http://www.edrawsoft.cn/mindmaster</a></td></tr><tr><td>ScreenToGif</td><td>gif 录制工具</td><td><a href="https://www.screentogif.com/" target="_blank" rel="noopener">https://www.screentogif.com/</a></td></tr><tr><td>ProcessOn</td><td>流程图绘制工具</td><td><a href="https://www.processon.com/" target="_blank" rel="noopener">https://www.processon.com/</a></td></tr><tr><td>PicPick</td><td>屏幕取色工具</td><td><a href="https://picpick.app/zh/" target="_blank" rel="noopener">https://picpick.app/zh/</a></td></tr><tr><td>Sublime Text</td><td>文本编辑器</td><td><a href="http://www.sublimetext.com/" target="_blank" rel="noopener">http://www.sublimetext.com/</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;开发工具篇&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;工具&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;官网&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IDEA&lt;/td&gt;
&lt;
      
    
    </summary>
    
      <category term="Tools" scheme="https://zhangshengjian.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="https://zhangshengjian.github.io/tags/Tools/"/>
    
      <category term="开发工具" scheme="https://zhangshengjian.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Spring Task</title>
    <link href="https://zhangshengjian.github.io/2019/07/17/Spring-Task/"/>
    <id>https://zhangshengjian.github.io/2019/07/17/Spring-Task/</id>
    <published>2019-07-17T07:59:00.000Z</published>
    <updated>2019-07-17T08:56:37.956Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Spring-Task-简介"><a href="#Spring-Task-简介" class="headerlink" title="Spring Task 简介"></a>Spring Task 简介</h4><blockquote><p>Spring Task 是 Spring 自主研发的轻量级定时任务工具，相比于 Quartz 更加简单方便，且不需要引入其他依赖即可使用。</p></blockquote><h4 id="Cron-表达式"><a href="#Cron-表达式" class="headerlink" title="Cron 表达式"></a>Cron 表达式</h4><blockquote><p>Cron 表达式是一个字符串，包括6~7个时间元素，在 Spring Task 中可以用于指定任务的执行时间。</p></blockquote><h5 id="Cron-的语法格式"><a href="#Cron-的语法格式" class="headerlink" title="Cron 的语法格式"></a>Cron 的语法格式</h5><p>Seconds Minutes Hours DayofMonth Month DayofWeek</p><h5 id="Cron-格式中每个时间元素的说明"><a href="#Cron-格式中每个时间元素的说明" class="headerlink" title="Cron 格式中每个时间元素的说明"></a>Cron 格式中每个时间元素的说明</h5><table><thead><tr><th>时间元素</th><th>可出现的字符</th><th>有效数值范围</th></tr></thead><tbody><tr><td>Seconds</td><td>, - * /</td><td>0-59</td></tr><tr><td>Minutes</td><td>, - * /</td><td>0-59</td></tr><tr><td>Hours</td><td>, - * /</td><td>0-23</td></tr><tr><td>DayofMonth</td><td>, - * / ? L W</td><td>0-31</td></tr><tr><td>Month</td><td>, - * /</td><td>1-12</td></tr><tr><td>DayofWeek</td><td>, - * / ? L #</td><td>1-7 或 SUN-SAT</td></tr></tbody></table><h5 id="Cron-格式中特殊字符说明"><a href="#Cron-格式中特殊字符说明" class="headerlink" title="Cron 格式中特殊字符说明"></a>Cron 格式中特殊字符说明</h5><table><thead><tr><th>字符</th><th>作用</th><th>举例</th></tr></thead><tbody><tr><td>,</td><td>列出枚举值</td><td>0-59</td></tr><tr><td>-</td><td>表示触发范围</td><td>在 Minutes 域使用5-10，表示从5分到10分钟每分钟触发一次</td></tr><tr><td>*</td><td>匹配任意值</td><td>在 Minutes 域使用*, 表示每分钟都会触发一次</td></tr><tr><td>/</td><td>起始时间开始触发，每隔固定时间触发一次</td><td>在 Minutes 域使用5/10,表示5分时触发一次，每10分钟再触发一次</td></tr><tr><td>?</td><td>在 DayofMonth 和 DayofWeek 中，用于匹配任意值</td><td>在 DayofMonth 域使用?,表示每天都触发一次</td></tr><tr><td>#</td><td>在 DayofMonth 中，确定第几个星期几</td><td>1#3表示第三个星期日</td></tr><tr><td>L</td><td>表示最后</td><td>在 DayofWeek 中使用 5L,表示在最后一个星期四触发</td></tr><tr><td>W</td><td>表示有效工作日(周一到周五)</td><td>在 DayofMonth 使用 5W，如果5日是星期六，则将在最近的工作日4日触发一次</td></tr></tbody></table><h4 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h4><blockquote><p><a href="https://juejin.im/post/5cfa0ea16fb9a07eaf2b8261" target="_blank" rel="noopener">https://juejin.im/post/5cfa0ea16fb9a07eaf2b8261</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Spring-Task-简介&quot;&gt;&lt;a href=&quot;#Spring-Task-简介&quot; class=&quot;headerlink&quot; title=&quot;Spring Task 简介&quot;&gt;&lt;/a&gt;Spring Task 简介&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Spring Ta
      
    
    </summary>
    
      <category term="Spring" scheme="https://zhangshengjian.github.io/categories/Spring/"/>
    
    
      <category term="Spring Task" scheme="https://zhangshengjian.github.io/tags/Spring-Task/"/>
    
      <category term="Spring" scheme="https://zhangshengjian.github.io/tags/Spring/"/>
    
      <category term="定时服务" scheme="https://zhangshengjian.github.io/tags/%E5%AE%9A%E6%97%B6%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>JWT</title>
    <link href="https://zhangshengjian.github.io/2019/07/15/JWT/"/>
    <id>https://zhangshengjian.github.io/2019/07/15/JWT/</id>
    <published>2019-07-15T09:33:00.000Z</published>
    <updated>2019-07-15T09:53:48.115Z</updated>
    
    <content type="html"><![CDATA[<h4 id="JWT-简介"><a href="#JWT-简介" class="headerlink" title="JWT 简介"></a>JWT 简介</h4><p>JWT 是 JSON WEB TOKEN 的缩写，它是基于 RFC 7519 标准定义的一种可以安全传输的的 JSON 对象，由于使用了数字签名，所以是可信任和安全的。</p><h4 id="JWT-的组成"><a href="#JWT-的组成" class="headerlink" title="JWT 的组成"></a>JWT 的组成</h4><ul><li>JWT token 的格式：header.payload.signature</li><li><p>header 中用于存放签名的生成算法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;alg&quot;: &quot;HS512&quot;&#125;</span><br></pre></td></tr></table></figure></li><li><p>payload 中用于存放用户名、token 的生成时间和过期时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;sub&quot;:&quot;admin&quot;,&quot;created&quot;:1489079981393,&quot;exp&quot;:1489684781&#125;</span><br></pre></td></tr></table></figure></li><li><p>signature 为以 header 和 payload 生成的签名，一旦 header 和 payload 被篡改，验证将失败</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// secret 为加密算法的密钥</span><br><span class="line">String signature = HMACSHA512(base64UrlEncode(header) + &quot;.&quot; +base64UrlEncode(payload),secret)</span><br></pre></td></tr></table></figure></li></ul><h4 id="JWT-实例"><a href="#JWT-实例" class="headerlink" title="JWT 实例"></a>JWT 实例</h4><p>这是一个 JWT 的字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImNyZWF0ZWQiOjE1NTY3NzkxMjUzMDksImV4cCI6MTU1NzM4MzkyNX0.d-iki0193X0bBOETf2UN3r3PotNIEAV7mzIxxeI5IxFyzzkOZxS0PGfF_SK6wxCv2K8S0cZjMkv6b5bCqc0VBw</span><br></pre></td></tr></table></figure></p><p>可以在该网站上获得解析结果：<a href="https://jwt.io/" target="_blank" rel="noopener">https://jwt.io/</a></p><p><img src="/images/pasted-32.png" alt="图一"></p><h4 id="JWT-实现认证和授权的原理"><a href="#JWT-实现认证和授权的原理" class="headerlink" title="JWT 实现认证和授权的原理"></a>JWT 实现认证和授权的原理</h4><p>用户调用登录接口，登录成功后获取到 JWT 的 token；<br>之后用户每次调用接口都在 http 的 header 中添加一个叫 Authorization 的头，值为 JWT 的 token；<br>后台程序通过对 Authorization 头中信息的解码及数字签名校验来获取其中的用户信息，从而实现认证和授权。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;JWT-简介&quot;&gt;&lt;a href=&quot;#JWT-简介&quot; class=&quot;headerlink&quot; title=&quot;JWT 简介&quot;&gt;&lt;/a&gt;JWT 简介&lt;/h4&gt;&lt;p&gt;JWT 是 JSON WEB TOKEN 的缩写，它是基于 RFC 7519 标准定义的一种可以安全传输的的
      
    
    </summary>
    
      <category term="JWT" scheme="https://zhangshengjian.github.io/categories/JWT/"/>
    
    
      <category term="JWT" scheme="https://zhangshengjian.github.io/tags/JWT/"/>
    
      <category term="Token" scheme="https://zhangshengjian.github.io/tags/Token/"/>
    
  </entry>
  
  <entry>
    <title>Spring Security</title>
    <link href="https://zhangshengjian.github.io/2019/07/15/Spring-Security/"/>
    <id>https://zhangshengjian.github.io/2019/07/15/Spring-Security/</id>
    <published>2019-07-15T09:27:00.000Z</published>
    <updated>2019-07-15T12:10:14.036Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Spring-Security-简介"><a href="#Spring-Security-简介" class="headerlink" title="Spring Security 简介"></a>Spring Security 简介</h4><blockquote><p>Spring Security 是一个强大的可高度定制的认证和授权框架，对于 Spring 应用来说它是一套 Web 安全标准。Spring Security 注重于为 Java 应用提供认证和授权功能，像所有的 Spring 项目一样，它对自定义需求具有强大的扩展性。</p></blockquote><h4 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h4><blockquote><p><a href="https://juejin.im/post/5cf90fa5e51d455d6d5357d3" target="_blank" rel="noopener">https://juejin.im/post/5cf90fa5e51d455d6d5357d3</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Spring-Security-简介&quot;&gt;&lt;a href=&quot;#Spring-Security-简介&quot; class=&quot;headerlink&quot; title=&quot;Spring Security 简介&quot;&gt;&lt;/a&gt;Spring Security 简介&lt;/h4&gt;&lt;blockquo
      
    
    </summary>
    
      <category term="Spring Security" scheme="https://zhangshengjian.github.io/categories/Spring-Security/"/>
    
    
      <category term="Spring Security" scheme="https://zhangshengjian.github.io/tags/Spring-Security/"/>
    
  </entry>
  
  <entry>
    <title>Swagger-UI</title>
    <link href="https://zhangshengjian.github.io/2019/07/15/Swagger-UI/"/>
    <id>https://zhangshengjian.github.io/2019/07/15/Swagger-UI/</id>
    <published>2019-07-15T07:45:00.000Z</published>
    <updated>2019-07-15T08:47:25.306Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Swagger-UI-简介"><a href="#Swagger-UI-简介" class="headerlink" title="Swagger-UI 简介"></a>Swagger-UI 简介</h4><blockquote><p>Swagger-UI 是 HTML, Javascript, CSS 的一个集合，可以动态地根据注解生成在线 API 文档。</p></blockquote><h4 id="Swagger-UI-常用注解"><a href="#Swagger-UI-常用注解" class="headerlink" title="Swagger-UI 常用注解"></a>Swagger-UI 常用注解</h4><ul><li>@Api：用于修饰 Controller 类，生成 Controller 相关文档信息</li><li>@ApiOperation：用于修饰 Controller 类中的方法，生成接口方法相关文档信息</li><li>@ApiParam：用于修饰接口中的参数，生成接口参数相关文档信息</li><li>@ApiModelProperty：用于修饰实体类的属性，当实体类是请求参数或返回结果时，直接生成相关文档信息</li></ul><h4 id="接口文档访问地址"><a href="#接口文档访问地址" class="headerlink" title="接口文档访问地址"></a>接口文档访问地址</h4><blockquote><p><a href="http://localhost:8080/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/swagger-ui.html</a></p></blockquote><h4 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h4><blockquote><p><a href="https://juejin.im/post/5cf9035cf265da1bb47d54f8" target="_blank" rel="noopener">https://juejin.im/post/5cf9035cf265da1bb47d54f8</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Swagger-UI-简介&quot;&gt;&lt;a href=&quot;#Swagger-UI-简介&quot; class=&quot;headerlink&quot; title=&quot;Swagger-UI 简介&quot;&gt;&lt;/a&gt;Swagger-UI 简介&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Swagger-UI 是 
      
    
    </summary>
    
      <category term="Swagger-UI" scheme="https://zhangshengjian.github.io/categories/Swagger-UI/"/>
    
    
      <category term="Swagger-UI" scheme="https://zhangshengjian.github.io/tags/Swagger-UI/"/>
    
      <category term="Api" scheme="https://zhangshengjian.github.io/tags/Api/"/>
    
      <category term="Document" scheme="https://zhangshengjian.github.io/tags/Document/"/>
    
  </entry>
  
  <entry>
    <title>架构篇 - MySQL数据库连接参数详解</title>
    <link href="https://zhangshengjian.github.io/2019/07/15/%E6%9E%B6%E6%9E%84%E7%AF%87-MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/"/>
    <id>https://zhangshengjian.github.io/2019/07/15/架构篇-MySQL数据库连接参数详解/</id>
    <published>2019-07-15T01:31:00.000Z</published>
    <updated>2019-07-15T08:27:21.963Z</updated>
    
    <content type="html"><![CDATA[<h4 id="MySQL-数据库连接"><a href="#MySQL-数据库连接" class="headerlink" title="MySQL 数据库连接"></a>MySQL 数据库连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql://localhost:3306/mall?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>useUnicode=true&amp;characterEncoding=utf-8</td><td>指定字符编码、解码格式</td></tr><tr><td>serverTimezone=Asia/Shanghai</td><td>时区使用中国标准时间</td></tr></tbody></table><h4 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h4><blockquote><p><a href="https://blog.csdn.net/yaphets__yj/article/details/77774874" target="_blank" rel="noopener">https://blog.csdn.net/yaphets__yj/article/details/77774874</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;MySQL-数据库连接&quot;&gt;&lt;a href=&quot;#MySQL-数据库连接&quot; class=&quot;headerlink&quot; title=&quot;MySQL 数据库连接&quot;&gt;&lt;/a&gt;MySQL 数据库连接&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
      
    
    </summary>
    
      <category term="MySQL" scheme="https://zhangshengjian.github.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://zhangshengjian.github.io/tags/MySQL/"/>
    
      <category term="架构" scheme="https://zhangshengjian.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB 常用命令</title>
    <link href="https://zhangshengjian.github.io/2019/07/13/MangoDB-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://zhangshengjian.github.io/2019/07/13/MangoDB-常用命令/</id>
    <published>2019-07-13T15:15:00.000Z</published>
    <updated>2019-07-13T15:32:14.157Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>mongod -version</td><td>查看 MangoDB 版本</td></tr><tr><td>mongod –dbpath data –logpath log/mongod.log –logappend –fork</td><td>脚本启动或配置文件启动</td></tr><tr><td>–dbpath $dbpath</td><td>数据库数据文件路径</td></tr><tr><td>–logpath $logpath</td><td>日志文件的路径</td></tr><tr><td>–logappend</td><td>以追加的方式打开文件</td></tr><tr><td>–fork</td><td>将数据库服务放在后台运行</td></tr></tbody></table><p><img src="/images/pasted-31.png" alt="图一"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mongod -version&lt;/td&gt;
&lt;td&gt;查看 MangoDB 版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mong
      
    
    </summary>
    
      <category term="MongoDB" scheme="https://zhangshengjian.github.io/categories/MongoDB/"/>
    
    
      <category term="MongoDB" scheme="https://zhangshengjian.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>RabbitMQ 安装配置</title>
    <link href="https://zhangshengjian.github.io/2019/07/13/RabbitMQ-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>https://zhangshengjian.github.io/2019/07/13/RabbitMQ-安装配置/</id>
    <published>2019-07-13T13:55:00.000Z</published>
    <updated>2019-07-13T14:33:51.735Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Mac-安装-RabbitMQ"><a href="#Mac-安装-RabbitMQ" class="headerlink" title="Mac 安装 RabbitMQ"></a>Mac 安装 RabbitMQ</h4><p>终端运行如下命令即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install rabbitmq</span><br></pre></td></tr></table></figure></p><h4 id="Mac-启动-RabbitMQ"><a href="#Mac-启动-RabbitMQ" class="headerlink" title="Mac 启动 RabbitMQ"></a>Mac 启动 RabbitMQ</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 进入到 RabbitMQ 目录</span><br><span class="line"></span><br><span class="line">cd /usr/local/Cellar/rabbitmq/3.7.16</span><br><span class="line"></span><br><span class="line"># 启动 RabbitMQ</span><br><span class="line">sbin/rabbitmq-server</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-24.png" alt="图一"></p><p>访问地址查看是否安装成功 <a href="http://localhost:15672/，" target="_blank" rel="noopener">http://localhost:15672/，</a> 登录用户名 guest 密码 guest<br><img src="/images/pasted-25.png" alt="图二"><br><img src="/images/pasted-26.png" alt="图三"></p><h4 id="创建帐号并设置其角色为管理员"><a href="#创建帐号并设置其角色为管理员" class="headerlink" title="创建帐号并设置其角色为管理员"></a>创建帐号并设置其角色为管理员</h4><p><img src="/images/pasted-27.png" alt="图四"></p><h4 id="创建一个新的虚拟-host-为：-mall"><a href="#创建一个新的虚拟-host-为：-mall" class="headerlink" title="创建一个新的虚拟 host 为：/mall"></a>创建一个新的虚拟 host 为：/mall</h4><p><img src="/images/pasted-28.png" alt="图五"></p><h4 id="点击-mall-用户进入用户配置页面"><a href="#点击-mall-用户进入用户配置页面" class="headerlink" title="点击 mall 用户进入用户配置页面"></a>点击 mall 用户进入用户配置页面</h4><p><img src="/images/pasted-29.png" alt="图六"></p><h4 id="给-mall-用户配置该虚拟-host-的权限"><a href="#给-mall-用户配置该虚拟-host-的权限" class="headerlink" title="给 mall 用户配置该虚拟 host 的权限"></a>给 mall 用户配置该虚拟 host 的权限</h4><p><img src="/images/pasted-30.png" alt="图七"></p><p>至此，RabbitMQ 的安装和配置完成。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Mac-安装-RabbitMQ&quot;&gt;&lt;a href=&quot;#Mac-安装-RabbitMQ&quot; class=&quot;headerlink&quot; title=&quot;Mac 安装 RabbitMQ&quot;&gt;&lt;/a&gt;Mac 安装 RabbitMQ&lt;/h4&gt;&lt;p&gt;终端运行如下命令即可&lt;br&gt;&lt;fig
      
    
    </summary>
    
      <category term="MQ" scheme="https://zhangshengjian.github.io/categories/MQ/"/>
    
    
      <category term="RabbitMQ" scheme="https://zhangshengjian.github.io/tags/RabbitMQ/"/>
    
  </entry>
  
</feed>
